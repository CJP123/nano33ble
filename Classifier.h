#pragma once
namespace Eloquent {
    namespace ML {
        namespace Port {
            class SVM {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(double *x) {
                        float kernels[13] = { 0 };
                        float decisions[1] = { 0 };
                        int votes[2] = { 0 };
                        kernels[0] = compute_kernel(x,   135.84  , 548.0237  , 532.3177  , 375.6325  , 192.6446  , 392.2761  , 418.3773  , 420.0802  , 385.9827  , 300.5421  , 196.6202  , 198.0859  , 343.3035  , 475.2329  , 552.1462  , 593.0971  , 581.7989  , 620.4888  , 603.8181  , 633.6431  , 604.5002  , 622.93  , 603.1575  , 611.3279  , 550.0068  , 568.489  , 533.3979  , 518.264  , 464.7396  , 436.6986  , 440.7239  , 403.769  , 361.793  , 360.1401  , 308.5477  , 247.9259  , 243.3836  , 237.791  , 164.1093  , 158.7739  , 152.832  , 146.3425  , 139.37  , 131.9838  , 0.0  , 116.2671  , 108.0929  , 99.8157  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        kernels[1] = compute_kernel(x,   174.32  , 124.5808  , 85.2885  , 57.4497  , 75.7109  , 136.9702  , 185.3591  , 227.7701  , 240.911  , 270.9183  , 277.9403  , 315.9469  , 322.8466  , 352.686  , 343.2509  , 366.0719  , 373.3439  , 374.4432  , 385.4158  , 372.7716  , 372.6171  , 393.47  , 386.4736  , 374.0583  , 354.3904  , 328.2185  , 291.8768  , 298.7415  , 304.3169  , 251.3728  , 253.6899  , 254.8542  , 254.8542  , 253.6899  , 178.4254  , 175.9788  , 172.7547  , 168.785  , 164.1093  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        kernels[2] = compute_kernel(x,   25.04  , 39.3326  , 55.8787  , 83.2619  , 116.9338  , 155.6047  , 202.6315  , 260.7912  , 335.875  , 412.4542  , 506.7981  , 585.3437  , 662.8027  , 729.0505  , 781.2869  , 807.9874  , 828.8566  , 843.8409  , 862.0466  , 851.9513  , 865.551  , 858.55  , 865.1186  , 822.4217  , 777.2026  , 769.7721  , 735.7534  , 712.0165  , 681.5533  , 642.7257  , 648.6501  , 626.6415  , 599.6569  , 508.3746  , 471.2007  , 430.7106  , 385.5961  , 337.57  , 328.2185  , 274.5648  , 264.2895  , 253.0674  , 196.35  , 185.944  , 175.0585  , 163.8017  , 108.0929  , 99.8157  , 91.518  , 83.2821  , 75.1898  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        kernels[3] = compute_kernel(x,   14.48  , 14.8937  , 16.1308  , 18.179  , 21.0179  , 24.6193  , 28.9474  , 33.9591  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        kernels[4] = compute_kernel(x,   35.44  , 39.3326  , 36.0047  , 36.358  , 29.6108  , 42.5737  , 28.9474  , 33.9591  , 39.6048  , 45.8282  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 91.518  , 99.8157  , 108.0929  , 116.2671  , 124.2572  , 131.9838  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        kernels[5] = compute_kernel(x,   28.96  , 36.4526  , 39.4805  , 48.0087  , 55.5058  , 54.9513  , 57.8947  , 67.9183  , 68.4879  , 64.5646  , 90.9042  , 103.3348  , 67.3217  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 116.2671  , 124.2572  , 185.944  , 139.37  , 146.3425  , 152.832  , 158.7739  , 164.1093  , 168.785  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        kernels[6] = compute_kernel(x,   66.32  , 128.1191  , 136.8002  , 135.991  , 132.8424  , 123.0964  , 95.9581  , 67.9183  , 0.0  , 45.8282  , 166.1252  , 133.3778  , 150.265  , 184.0281  , 185.8892  , 183.0359  , 140.6244  , 285.4607  , 163.8017  , 248.5144  , 348.5538  , 139.37  , 206.1731  , 403.6115  , 158.7739  , 231.2036  , 291.8768  , 0.0  , 247.9259  , 251.3728  , 0.0  , 254.8542  , 180.8965  , 253.6899  , 0.0  , 0.0  , 0.0  , 168.785  , 328.2185  , 0.0  , 0.0  , 292.685  , 0.0  , 0.0  , 0.0  , 116.2671  , 0.0  , 0.0  , 91.518  , 83.2821  , 105.9304  , 116.4182  , 59.7559  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        kernels[7] = compute_kernel(x,   32.32  , 20.9829  , 32.2617  , 31.4366  , 0.0  , 69.5052  , 81.7243  , 58.7249  , 88.3997  , 91.6565  , 0.0  , 84.1865  , 94.8455  , 75.1898  , 0.0  , 91.518  , 0.0  , 0.0  , 0.0  , 124.2572  , 131.9838  , 139.37  , 206.1731  , 215.3157  , 223.687  , 231.2036  , 237.791  , 172.7547  , 175.9788  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        kernels[8] = compute_kernel(x,   20.4  , 20.9829  , 22.7258  , 25.6113  , 36.3459  , 42.5737  , 50.0581  , 47.843  , 55.7968  , 45.8282  , 52.5676  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        kernels[9] = compute_kernel(x,   14.48  , 0.0  , 0.0  , 0.0  , 21.0179  , 24.6193  , 70.8491  , 33.9591  , 88.3997  , 194.2003  , 128.6599  , 304.7221  , 201.9651  , 105.9304  , 83.2821  , 183.0359  , 99.8157  , 186.923  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 237.791  , 172.7547  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        kernels[10] = compute_kernel(x,   61.36  , 42.0481  , 39.4805  , 18.179  , 42.0358  , 65.0166  , 64.6118  , 67.9183  , 68.4879  , 0.0  , 52.5676  , 188.8419  , 329.5416  , 444.4923  , 526.3794  , 571.3553  , 607.1664  , 630.044  , 636.5784  , 645.3136  , 646.0642  , 638.33  , 620.1364  , 611.3279  , 571.9369  , 568.489  , 533.3979  , 518.264  , 464.7396  , 436.6986  , 440.7239  , 403.769  , 361.793  , 311.3919  , 251.3728  , 247.9259  , 243.3836  , 168.785  , 164.1093  , 158.7739  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        kernels[11] = compute_kernel(x,   176.72  , 165.806  , 143.3951  , 125.9474  , 111.1277  , 88.6838  , 64.6118  , 47.843  , 0.0  , 102.2907  , 138.8249  , 253.2198  , 308.3409  , 260.4642  , 526.3794  , 690.6826  , 779.2245  , 724.9985  , 1127.3412  , 842.3402  , 417.0979  , 736.89  , 485.1133  , 699.9873  , 158.7739  , 231.2036  , 168.785  , 172.7547  , 304.3169  , 618.0813  , 596.9173  , 254.8542  , 180.8965  , 0.0  , 0.0  , 0.0  , 0.0  , 237.791  , 591.156  , 709.6579  , 732.9179  , 701.7972  , 653.73  , 632.9387  , 582.8418  , 492.6898  , 389.3732  , 299.4472  , 241.6883  , 185.8892  , 150.3796  , 150.265  , 133.3778  , 105.1352  , 91.6565  , 68.4879  , 58.7249  , 40.7822  , 34.6846  , 29.6108  , 25.6113  , 22.7258  , 20.9829  , 20.4 );
                        kernels[12] = compute_kernel(x,   56.08  , 63.1132  , 16.1308  , 31.4366  , 84.0716  , 147.7156  , 119.3079  , 89.6821  , 79.2096  , 64.5646  , 74.0593  , 231.4303  , 277.4696  , 237.6165  , 235.1223  , 258.3739  , 263.6018  , 285.4607  , 284.5653  , 328.1488  , 348.5538  , 341.11  , 326.6429  , 264.2895  , 223.687  , 283.7911  , 337.57  , 298.7415  , 304.3169  , 251.3728  , 253.6899  , 312.821  , 312.821  , 360.1401  , 308.5477  , 304.3169  , 298.7415  , 291.8768  , 164.1093  , 158.7739  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0  , 0.0 );
                        float decision = -0.702919737696;
                        decision = decision - ( + kernels[0] * -1.6984521e-05  + kernels[1] * -7.5577628e-05  + kernels[2] * -6.8614713e-05  + kernels[3] * -0.001011698269  + kernels[4] * -7.8671162e-05  + kernels[5] * -3.2023789e-05 );
                        decision = decision - ( + kernels[6] * 1.5862375e-05  + kernels[7] * 2.0538006e-05  + kernels[8] * 0.001022975358  + kernels[9] * 4.054312e-05  + kernels[10] * 0.000109896324  + kernels[11] * 1.7830828e-05  + kernels[12] * 5.5924071e-05 );

                        return decision > 0 ? 0 : 1;
                    }

                    /**
                    * Convert class idx to readable name
                    */
                    const char* predictLabel(double *x) {
                        switch (predict(x)) {
                            case 0:
                            return "one";
                            case 1:
                            return "two";
                            default:
                            return "Houston we have a problem";
                        }
                    }

                protected:
                    /**
                    * Compute kernel between feature vector and support vector.
                    * Kernel type: linear
                    */
                    float compute_kernel(double *x, ...) {
                        va_list w;
                        va_start(w, 64);
                        float kernel = 0.0;

                        for (uint16_t i = 0; i < 64; i++) {
                            kernel += x[i] * va_arg(w, double);
                        }

                        return kernel;
                    }
                };
            }
        }
    }
